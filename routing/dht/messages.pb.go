// Code generated by protoc-gen-go. DO NOT EDIT.
// source: messages.proto

package dht

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DHTMessage_MessageType int32

const (
	DHTMessage_PUT_VALUE DHTMessage_MessageType = 0
	DHTMessage_GET_VALUE DHTMessage_MessageType = 1
	DHTMessage_PING      DHTMessage_MessageType = 2
	DHTMessage_FIND_NODE DHTMessage_MessageType = 3
)

var DHTMessage_MessageType_name = map[int32]string{
	0: "PUT_VALUE",
	1: "GET_VALUE",
	2: "PING",
	3: "FIND_NODE",
}
var DHTMessage_MessageType_value = map[string]int32{
	"PUT_VALUE": 0,
	"GET_VALUE": 1,
	"PING":      2,
	"FIND_NODE": 3,
}

func (x DHTMessage_MessageType) Enum() *DHTMessage_MessageType {
	p := new(DHTMessage_MessageType)
	*p = x
	return p
}
func (x DHTMessage_MessageType) String() string {
	return proto.EnumName(DHTMessage_MessageType_name, int32(x))
}
func (x *DHTMessage_MessageType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DHTMessage_MessageType_value, data, "DHTMessage_MessageType")
	if err != nil {
		return err
	}
	*x = DHTMessage_MessageType(value)
	return nil
}
func (DHTMessage_MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_messages_696a7cead68bd1f0, []int{0, 0}
}

type DHTMessage struct {
	Type                 *DHTMessage_MessageType `protobuf:"varint,1,req,name=type,enum=dht.DHTMessage_MessageType" json:"type,omitempty"`
	Key                  *string                 `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	Value                []byte                  `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *DHTMessage) Reset()         { *m = DHTMessage{} }
func (m *DHTMessage) String() string { return proto.CompactTextString(m) }
func (*DHTMessage) ProtoMessage()    {}
func (*DHTMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_696a7cead68bd1f0, []int{0}
}
func (m *DHTMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DHTMessage.Unmarshal(m, b)
}
func (m *DHTMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DHTMessage.Marshal(b, m, deterministic)
}
func (dst *DHTMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DHTMessage.Merge(dst, src)
}
func (m *DHTMessage) XXX_Size() int {
	return xxx_messageInfo_DHTMessage.Size(m)
}
func (m *DHTMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_DHTMessage.DiscardUnknown(m)
}

var xxx_messageInfo_DHTMessage proto.InternalMessageInfo

func (m *DHTMessage) GetType() DHTMessage_MessageType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return DHTMessage_PUT_VALUE
}

func (m *DHTMessage) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *DHTMessage) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*DHTMessage)(nil), "dht.DHTMessage")
	proto.RegisterEnum("dht.DHTMessage_MessageType", DHTMessage_MessageType_name, DHTMessage_MessageType_value)
}

func init() { proto.RegisterFile("messages.proto", fileDescriptor_messages_696a7cead68bd1f0) }

var fileDescriptor_messages_696a7cead68bd1f0 = []byte{
	// 173 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcb, 0x4d, 0x2d, 0x2e,
	0x4e, 0x4c, 0x4f, 0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0xc9, 0x28, 0x51,
	0x5a, 0xcd, 0xc8, 0xc5, 0xe5, 0xe2, 0x11, 0xe2, 0x0b, 0x91, 0x12, 0xd2, 0xe7, 0x62, 0x29, 0xa9,
	0x2c, 0x48, 0x95, 0x60, 0x54, 0x60, 0xd2, 0xe0, 0x33, 0x92, 0xd6, 0x4b, 0xc9, 0x28, 0xd1, 0x43,
	0x48, 0xeb, 0x41, 0xe9, 0x90, 0xca, 0x82, 0xd4, 0x20, 0xb0, 0x42, 0x21, 0x01, 0x2e, 0xe6, 0xec,
	0xd4, 0x4a, 0x09, 0x26, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x10, 0x53, 0x48, 0x84, 0x8b, 0xb5, 0x2c,
	0x31, 0xa7, 0x34, 0x55, 0x82, 0x59, 0x81, 0x51, 0x83, 0x27, 0x08, 0xc2, 0x51, 0x72, 0xe1, 0xe2,
	0x46, 0xd2, 0x2c, 0xc4, 0xcb, 0xc5, 0x19, 0x10, 0x1a, 0x12, 0x1f, 0xe6, 0xe8, 0x13, 0xea, 0x2a,
	0xc0, 0x00, 0xe2, 0xba, 0xbb, 0xc2, 0xb8, 0x8c, 0x42, 0x1c, 0x5c, 0x2c, 0x01, 0x9e, 0x7e, 0xee,
	0x02, 0x4c, 0x20, 0x09, 0x37, 0x4f, 0x3f, 0x97, 0x78, 0x3f, 0x7f, 0x17, 0x57, 0x01, 0x66, 0x40,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x41, 0x09, 0x00, 0x94, 0xc3, 0x00, 0x00, 0x00,
}
